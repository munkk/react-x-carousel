{"version":3,"sources":["../../src/models/Node.tsx","../../src/models/LinkedList.tsx","../../src/models/Slide.tsx","../../src/components/Carousel/Carousel.tsx","../../src/shims/document.ts","../../src/components/Slide/Slide.tsx","components/PeriodicElement/PeriodicElement.tsx","components/Tooltip/Tooltip.tsx","pages/MainPage/MainPage.tsx","pages/FeaturesPage/FeaturesPage.tsx","pages/FeaturesPage/Highlight/Hightlight.tsx","pages/FeaturesPage/GettingStarted/GettingStarted.tsx","pages/FeaturesPage/BasicExample/BasicExample.tsx","pages/FeaturesPage/NavigationExample/NavigationExample.tsx","App.tsx","index.tsx"],"names":["Node","value","prev","next","this","LinkedList","Symbol","iterator","current","idx","push","newNode","connectTailWithHead","pop","length","popped","newTail","tail","shift","shiftedNode","newHead","head","unshift","removeAtIndex","index","removedNode","after","getNodeAtIndex","before","currentIndex","currentNode","setNodeAtIndex","foundNode","Slide","id","item","element","classRemover","RegExp","whiteSpaceRemover","Carousel","theta","radius","cellsCount","moveRight","state","moveLeft","setSceneRef","setCarouselWrapperRef","setItemRef","node","handleLeftControlClick","handleRightControlClick","initialized","componentDidMount","props","onInit","componentDidUpdate","prevState","shallowEqualChildren","prevProps","setTimeout","shouldComponentUpdate","shallowCompare","componentWillUnmount","prevChildren","c","currChildren","addNewNode","slide","React","carouselWrapperRefExist","carouselWrapperRef","calculateDimension","width","sceneRef","getBoundingClientRect","Children","Math","setResizeListener","ResizeObserver","entries","changeCarousel","list","cellAngle","bindEvents","getDocument","navigateWithKeyboard","rotateCarousel","angle","onChange","getActualIndex","getCurrentNode","handleClickItem","removeExtraClasses","updateClassList","centerNode","centerElement","counter","max","destroyCarousel","renderItems","height","slideProps","key","ref","onClick","className","style","render","Component","PeriodicElement","backgroundColor","number","symbol","name","Tooltip","text","MainPage","handleChange","setState","currentElement","onSliderChange","event","elements","require","slice","showTooltip","href","onMouseEnter","onMouseLeave","summary","map","data","Slider","defaultValue","valueLabelDisplay","step","marks","min","to","FeaturesPage","handleDrawerToggle","mobileOpen","renderDrawer","renderContent","children","window","document","body","HighlightWrapper","defaultProps","theme","code","language","tokens","getLineProps","getTokenProps","line","i","token","GettingStarted","installCode","importCode","BasicExample","basicJs","basicCss","NavigationExample","instance","navigationJs","App","basename","exact","path","component","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.d906e193.chunk.js","sourcesContent":["export default class Node {\r\n  value: any = null\r\n  prev: any = null\r\n  next: any = null\r\n\r\n  constructor(value: any) {\r\n    this.value = value\r\n    this.prev = null\r\n    this.next = null\r\n  }\r\n}\r\n","import Node from './Node'\r\n\r\nexport default class LinkedList implements Iterable<Node> {\r\n  public head: any\r\n  public tail: any\r\n  public length\r\n\r\n  constructor() {\r\n    this.head = null\r\n    this.tail = null\r\n    this.length = 0\r\n  }\r\n\r\n  *[Symbol.iterator]() {\r\n    let current = this.head\r\n    let idx = this.length\r\n\r\n    while (idx) {\r\n      yield current\r\n      current = current.next\r\n      idx--\r\n    }\r\n  }\r\n\r\n  push(val: any) {\r\n    const newNode = new Node(val)\r\n    if (!this.head) {\r\n      this.head = newNode\r\n      this.tail = newNode\r\n    } else {\r\n      this.tail.next = newNode\r\n      newNode.prev = this.tail\r\n      this.tail = newNode\r\n    }\r\n\r\n    this.length++\r\n    return this\r\n  }\r\n\r\n  connectTailWithHead() {\r\n    this.tail.next = this.head\r\n    this.head.prev = this.tail\r\n  }\r\n\r\n  pop() {\r\n    //in case of empty list\r\n    if (this.length === 0) {\r\n      return false\r\n    }\r\n    //get popped node\r\n    const popped = this.tail\r\n    //save newTail to a variable (could be null)\r\n    const newTail = this.tail.prev\r\n    //if newTail is not null\r\n    if (newTail) {\r\n      //sever connection to popped node\r\n      newTail.next = null\r\n      //sever connection from popped node\r\n      this.tail.prev = null\r\n      //in case of 1 length list\r\n    } else {\r\n      //make sure to edit head in case newTail is null\r\n      this.head = null\r\n    }\r\n    //assign new tail (could be null)\r\n    this.tail = newTail\r\n    // subtract length\r\n    this.length--\r\n\r\n    return popped\r\n  }\r\n\r\n  shift() {\r\n    //in case list is empty\r\n    if (!this.head) {\r\n      return false\r\n    }\r\n    //save shifted node to variable\r\n    const shiftedNode = this.head\r\n    //make the new head the next (might be null)\r\n    const newHead = this.head.next //might be null\r\n    //if list is more than 1\r\n    if (this.head !== this.tail) {\r\n      newHead.prev = null\r\n      shiftedNode.next = null\r\n    } else {\r\n      this.tail = null\r\n    }\r\n    this.head = newHead\r\n    this.length--\r\n    return shiftedNode\r\n  }\r\n\r\n  unshift(val: any) {\r\n    const newNode = new Node(val)\r\n    if (!this.head) {\r\n      this.head = newNode\r\n      this.tail = newNode\r\n    } else {\r\n      this.head.prev = newNode\r\n      newNode.next = this.head\r\n      this.head = newNode\r\n    }\r\n    this.length++\r\n    return this\r\n  }\r\n\r\n  // insertAtIndex(index, val) {\r\n  //     //if index doesn't exist\r\n  //     if (index > this.length) {\r\n  //         return false;\r\n  //     }\r\n  //     if (index === 0) {\r\n  //         this.unshift(val);\r\n  //     } else if (index === this.length) {\r\n  //         this.push(val);\r\n  //     } else {\r\n  //         const newNode = new Node(val);\r\n  //         const after = this.accessAtIndex(index);\r\n  //         const before = after.prev;\r\n  //         after.prev = newNode;\r\n  //         before.next = newNode;\r\n  //         newNode.next = after;\r\n  //         newNode.prev = before;\r\n  //         this.length++;\r\n  //     }\r\n  //     return this;\r\n  // }\r\n\r\n  removeAtIndex(index: number) {\r\n    let removedNode\r\n    if (index >= this.length) {\r\n      return false\r\n    }\r\n    if (index == 0) {\r\n      removedNode = this.shift()\r\n    } else if (index == this.length - 1) {\r\n      removedNode = this.pop()\r\n    } else {\r\n      removedNode = this.getNodeAtIndex(index)\r\n      const after = removedNode.next\r\n      const before = removedNode.prev\r\n      removedNode.next = null\r\n      removedNode.prev = null\r\n      before.next = after\r\n      after.prev = before\r\n      this.length--\r\n    }\r\n    return removedNode\r\n  }\r\n\r\n  getNodeAtIndex(index: number) {\r\n    if (index >= this.length || index < 0) {\r\n      return false\r\n    }\r\n    let currentIndex = 0\r\n    let currentNode = this.head\r\n    while (currentIndex !== index) {\r\n      currentNode = currentNode.next\r\n      currentIndex++\r\n    }\r\n    return currentNode\r\n  }\r\n\r\n  setNodeAtIndex(index: number, val: any) {\r\n    const foundNode = this.getNodeAtIndex(index)\r\n    if (foundNode) {\r\n      foundNode.value = val\r\n      return foundNode\r\n    }\r\n    return null\r\n  }\r\n}\r\n","export default class Slide {\r\n  id: number = null\r\n  item: any = null\r\n  element: any = null\r\n\r\n  constructor(id: number, item: any, element: any) {\r\n    this.id = id\r\n    this.item = item\r\n    this.element = element\r\n  }\r\n}\r\n","import React, { Children } from 'react'\r\nimport shallowCompare from 'react-addons-shallow-compare'\r\n\r\nimport LinkedList from '../../models/LinkedList'\r\nimport Node from '../../models/Node'\r\nimport Slide from '../../models/Slide'\r\nimport getDocument from '../../shims/document'\r\n\r\nimport './Carousel.scss'\r\n\r\ndeclare var ResizeObserver: any\r\n\r\nconst classes = {\r\n  itemCurrent: 'x-current',\r\n  itemPast: 'x-prev',\r\n  itemFuture: 'x-next'\r\n}\r\n\r\nconst classRemover = new RegExp(\r\n  '\\\\b(' +\r\n    classes.itemCurrent +\r\n    '|' +\r\n    classes.itemPast +\r\n    '|' +\r\n    classes.itemFuture +\r\n    ')(.*?)(\\\\s|$)',\r\n  'g'\r\n)\r\n\r\nconst whiteSpaceRemover = new RegExp('\\\\s\\\\s+', 'g')\r\n\r\n// const noop = () => {}\r\n\r\ninterface Props {\r\n  cellSize?: number\r\n  autoPlay?: boolean\r\n  children?: React.ReactChild[]\r\n\r\n  onInit?: (instance: Carousel) => void\r\n  useKeyboardArrows?: boolean\r\n  onChange?: (node: Node) => void\r\n}\r\n\r\ninterface State {\r\n  currentIndex: number\r\n  initialized: boolean\r\n}\r\n\r\nexport default class Carousel extends React.Component<Props, State> {\r\n  private carouselWrapperRef?: HTMLDivElement\r\n  private sceneRef?: HTMLDivElement\r\n  private resizeObserver: typeof ResizeObserver\r\n\r\n  list: LinkedList\r\n  theta: number = 0\r\n  radius: number = 0\r\n  cellsCount: number = 0\r\n\r\n  constructor(props: Props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      currentIndex: 0,\r\n      initialized: false\r\n    }\r\n\r\n    this.list = new LinkedList()\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ initialized: true })\r\n\r\n    if (this.props.onInit && typeof this.props.onInit === 'function') {\r\n      this.props.onInit(this)\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props, prevState: State) {\r\n    if (!prevState.initialized && this.state.initialized) {\r\n      this.setResizeListener()\r\n      this.calculateDimension()\r\n      this.changeCarousel()\r\n    }\r\n\r\n    // means user changed slides\r\n    if (!this.shallowEqualChildren(prevProps.children, this.props.children)) {\r\n      this.carouselWrapperRef.style.transition = 'transform 0s'\r\n      this.calculateDimension()\r\n      this.changeCarousel()\r\n      setTimeout(\r\n        () => (this.carouselWrapperRef.style.transition = 'transform 1s'),\r\n        0\r\n      )\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return shallowCompare(this.props.children, nextProps, nextState)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.destroyCarousel()\r\n  }\r\n\r\n  shallowEqualChildren(prevChildren, currChildren) {\r\n    const str1 = prevChildren.map((c) => c.key).join('')\r\n    const str2 = currChildren.map((c) => c.key).join('')\r\n\r\n    return str1 === str2\r\n  }\r\n\r\n  addNewNode(index, item) {\r\n    const slide = new Slide(index, item.props.data, React.createRef())\r\n    this.list.push(slide)\r\n  }\r\n\r\n  carouselWrapperRefExist() {\r\n    return (\r\n      this.carouselWrapperRef &&\r\n      this.carouselWrapperRef instanceof HTMLDivElement\r\n    )\r\n  }\r\n\r\n  calculateDimension() {\r\n    if (!this.sceneRef) return\r\n\r\n    const { width, height } = this.sceneRef.getBoundingClientRect()\r\n\r\n    this.cellsCount = Children.count(this.props.children) || 0\r\n    this.theta = 360 / this.cellsCount\r\n    this.radius = Math.round(width / 2 / Math.tan(Math.PI / this.cellsCount))\r\n  }\r\n\r\n  setResizeListener() {\r\n    this.resizeObserver = new ResizeObserver((entries: any) => {\r\n      entries.forEach(() => {\r\n        this.carouselWrapperRef.style.transition = 'transform 0s'\r\n        this.calculateDimension()\r\n        this.changeCarousel()\r\n        this.forceUpdate()\r\n        setTimeout(\r\n          () => (this.carouselWrapperRef.style.transition = 'transform 1s'),\r\n          0\r\n        )\r\n      })\r\n    })\r\n\r\n    this.resizeObserver.observe(this.sceneRef)\r\n  }\r\n\r\n  changeCarousel() {\r\n    if (!this.list.length) return\r\n\r\n    let currentNode = this.list.getNodeAtIndex(0)\r\n    while (true) {\r\n      const cellAngle = this.theta * currentNode.value.id\r\n      currentNode.value.element.style.transform =\r\n        'rotateY' + '(' + cellAngle + 'deg) translateZ(' + this.radius + 'px)'\r\n\r\n      if (currentNode.value.id === this.list.length - 1) break\r\n\r\n      currentNode = currentNode.next\r\n    }\r\n\r\n    this.rotateCarousel()\r\n  }\r\n\r\n  moveRight = () => {\r\n    this.setState(\r\n      (state, props) => {\r\n        return {\r\n          currentIndex: state.currentIndex + 1\r\n        }\r\n      },\r\n      () => {\r\n        this.rotateCarousel()\r\n      }\r\n    )\r\n  }\r\n\r\n  moveLeft = () => {\r\n    this.setState(\r\n      (state, props) => {\r\n        return {\r\n          currentIndex: state.currentIndex - 1\r\n        }\r\n      },\r\n      () => {\r\n        this.rotateCarousel()\r\n      }\r\n    )\r\n  }\r\n\r\n  bindEvents() {\r\n    if (this.props.useKeyboardArrows) {\r\n      getDocument().addEventListener('keydown', this.navigateWithKeyboard)\r\n    }\r\n  }\r\n\r\n  navigateWithKeyboard() {}\r\n\r\n  rotateCarousel() {\r\n    if (!this.carouselWrapperRefExist()) return\r\n\r\n    const angle = this.theta * this.state.currentIndex * -1\r\n    this.carouselWrapperRef.style.transform =\r\n      'translateZ(' + -this.radius + 'px) ' + 'rotateY' + '(' + angle + 'deg)'\r\n\r\n    //fix initial animation\r\n    setTimeout(\r\n      () => (this.carouselWrapperRef.style.transition = 'transform 1s'),\r\n      0\r\n    )\r\n\r\n    this.updateClassList()\r\n    if (this.props.onChange && typeof this.props.onChange === 'function') {\r\n      this.props.onChange(this.getCurrentNode())\r\n    }\r\n  }\r\n\r\n  setSceneRef = (node: HTMLDivElement) => {\r\n    this.sceneRef = node\r\n  }\r\n\r\n  setCarouselWrapperRef = (node: HTMLDivElement) => {\r\n    this.carouselWrapperRef = node\r\n  }\r\n\r\n  setItemRef = (element: HTMLElement, index: number) => {\r\n    if (!element) return\r\n\r\n    const node = this.list.getNodeAtIndex(index)\r\n    node.value.element = element\r\n  }\r\n\r\n  getActualIndex() {\r\n    return Math.sign(this.state.currentIndex) < 0\r\n      ? this.list.length - Math.abs(this.state.currentIndex)\r\n      : this.state.currentIndex % this.list.length\r\n  }\r\n\r\n  getCurrentNode() {\r\n    const idx = this.getActualIndex()\r\n\r\n    return this.list.getNodeAtIndex(idx)\r\n  }\r\n\r\n  handleClickItem(node: Node, index: number) {}\r\n\r\n  handleLeftControlClick = () => {\r\n    this.moveLeft()\r\n  }\r\n\r\n  handleRightControlClick = () => {\r\n    this.moveRight()\r\n  }\r\n\r\n  removeExtraClasses(element: any) {\r\n    return (element.className = element.className\r\n      .replace(classRemover, '')\r\n      .replace(whiteSpaceRemover, ' '))\r\n  }\r\n\r\n  updateClassList() {\r\n    const centerNode = this.getCurrentNode()\r\n    const centerElement = centerNode.value.element\r\n\r\n    this.removeExtraClasses(centerElement)\r\n    centerElement.classList.add('x-current')\r\n\r\n    let counter = 0\r\n    const max = Math.floor(this.list.length / 2)\r\n    let currentNode = centerNode\r\n    while (counter < max) {\r\n      const element = currentNode.next.value.element\r\n      this.removeExtraClasses(element)\r\n      element.classList.add('x-next-' + counter)\r\n      currentNode = currentNode.next\r\n      counter++\r\n    }\r\n\r\n    counter = 0\r\n    currentNode = centerNode\r\n    while (counter < max) {\r\n      const element = currentNode.prev.value.element\r\n      this.removeExtraClasses(element)\r\n      element.classList.add('x-prev-' + counter)\r\n      currentNode = currentNode.prev\r\n      counter++\r\n    }\r\n  }\r\n\r\n  destroyCarousel() {\r\n    this.resizeObserver.unobserve(this.sceneRef)\r\n  }\r\n\r\n  //RENDER\r\n\r\n  renderItems() {\r\n    if (!this.props.children || !this.sceneRef) return\r\n\r\n    const { width, height } = this.sceneRef.getBoundingClientRect()\r\n    this.list = new LinkedList()\r\n    return Children.map(this.props.children, (item, index) => {\r\n      this.addNewNode(index, item)\r\n      if (index === this.props.children.length - 1) {\r\n        this.list.connectTailWithHead()\r\n      }\r\n\r\n      const slideProps = {\r\n        key: index,\r\n        ref: (element: HTMLDivElement) => this.setItemRef(element, index),\r\n        onClick: this.handleClickItem.bind(this, item, index),\r\n        className: 'x-carousel__slide',\r\n        style: { width: width + 'px', height: height + 'px' }\r\n      }\r\n\r\n      return <div {...slideProps}>{item}</div>\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='x-scene' ref={this.setSceneRef}>\r\n        <div className='x-carousel' ref={this.setCarouselWrapperRef}>\r\n          {this.renderItems()}\r\n        </div>\r\n        <div\r\n          className='x-scene-lcontrol'\r\n          onClick={this.handleLeftControlClick}\r\n        ></div>\r\n        <div\r\n          className='x-scene-rcontrol'\r\n          onClick={this.handleRightControlClick}\r\n        ></div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","export default () => document;","import React, { Children } from 'react'\r\n\r\nimport './Slide.scss'\r\n\r\ninterface Props {\r\n  data?: any\r\n}\r\n\r\ninterface State {}\r\n\r\nexport default class Slide extends React.Component<Props, State> {\r\n  render() {\r\n    return <React.Fragment>{this.props.children}</React.Fragment>\r\n  }\r\n}\r\n","import React from 'react'\r\nimport './PeriodicElement.scss'\r\n\r\nexport interface Element {\r\n  number: number\r\n  name: string\r\n  symbol: string\r\n  atomic_mass: string\r\n  'cpk-hex': string\r\n  summary: string\r\n}\r\n\r\ninterface Props {\r\n  element: Element\r\n}\r\n\r\nexport function PeriodicElement(props: Props) {\r\n  return (\r\n    <div\r\n      className='element'\r\n      style={{ backgroundColor: '#' + props.element['cpk-hex'] }}\r\n    >\r\n      <div className='element__number'>{props.element.number}</div>\r\n      <div className='element__symbol'>{props.element.symbol}</div>\r\n      <div className='element__name'>{props.element.name}</div>\r\n      <div className='element__mass'>{props.element['atomic_mass']}</div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './Tooltip.scss'\r\n\r\ninterface Props {\r\n  text: string\r\n}\r\n\r\nexport function Tooltip(props: Props) {\r\n  return (\r\n    <div className='tooltip'>\r\n      <div className='tooltip__text'>{props.text}</div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Slider from '@material-ui/core/Slider'\r\nimport { Carousel, Slide } from 'react-x-carousel'\r\nimport 'react-x-carousel/dist/index.css'\r\n\r\nimport {\r\n  PeriodicElement,\r\n  Element\r\n} from '../../components/PeriodicElement/PeriodicElement'\r\nimport { Tooltip } from '../../components/Tooltip/Tooltip'\r\n\r\nimport './MainPage.scss'\r\n\r\ninterface Props {}\r\n\r\ninterface State {\r\n  elements: Element[]\r\n  currentElement: Element\r\n  showTooltip: boolean\r\n}\r\n\r\ninterface Props {}\r\n\r\ninterface State {}\r\n\r\nclass MainPage extends React.Component<Props, State> {\r\n  constructor(props: any) {\r\n    super(props)\r\n\r\n    const { elements } = require('../../assets/periodic.json')\r\n    this.state = {\r\n      elements: elements.slice(0, 9),\r\n      currentElement: null,\r\n      showTooltip: false\r\n    }\r\n  }\r\n\r\n  handleChange = (node: any) => {\r\n    this.setState({\r\n      currentElement: node.value.item\r\n    })\r\n  }\r\n\r\n  onSliderChange = (event: object, value: number) => {\r\n    const { elements } = require('../../assets/periodic.json')\r\n    return this.setState((state, props) => ({\r\n      elements: elements.slice(0, value)\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='example-page'>\r\n        <section className='header'>\r\n          <div className='fork-me'>\r\n            <a href='https://github.com/munkk/react-x-carousel'></a>\r\n          </div>\r\n\r\n          <div className='header__inner'>\r\n            <div className='header__inner-title'>\r\n              Responsive <br></br> Linked list based <br></br> 3D Carousel\r\n            </div>\r\n            <div className='header__inner-frameworks'>\r\n              <div className='framework'>\r\n                <a href='https://munkk.github.io/angular-x-carousel'>\r\n                  <i className='fab fa-angular'></i>\r\n                  <span>Angular</span>\r\n                </a>\r\n              </div>\r\n              <div className='framework'>\r\n                <a href='/'>\r\n                  <i className='fab fa-react'></i>\r\n                  <span>React</span>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        <section className='body'>\r\n          <div className='body__inner'>\r\n            <div\r\n              className='body__inner-example'\r\n              onMouseEnter={() => this.setState({ showTooltip: true })}\r\n              onMouseLeave={() => this.setState({ showTooltip: false })}\r\n            >\r\n              {this.state.showTooltip && (\r\n                <Tooltip\r\n                  text={\r\n                    this.state.currentElement &&\r\n                    this.state.currentElement.summary\r\n                  }\r\n                />\r\n              )}\r\n\r\n              <Carousel onChange={this.handleChange}>\r\n                {this.state.elements.map((element, idx) => {\r\n                  return (\r\n                    <Slide data={element} key={element.name}>\r\n                      <PeriodicElement element={element} />\r\n                    </Slide>\r\n                  )\r\n                })}\r\n              </Carousel>\r\n            </div>\r\n\r\n            <Slider\r\n              className='material-slider'\r\n              defaultValue={this.state.elements.length}\r\n              valueLabelDisplay='auto'\r\n              step={1}\r\n              marks\r\n              min={1}\r\n              max={20}\r\n              onChange={this.onSliderChange}\r\n            />\r\n          </div>\r\n        </section>\r\n\r\n        <section className='footer'>\r\n          <ul>\r\n            <li>\r\n              <Link to='/features/start'>How to Install</Link>\r\n            </li>\r\n            <li>\r\n              <Link to='/features/basic'>See Examples</Link>\r\n            </li>\r\n          </ul>\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MainPage\r\n","import React from 'react'\r\nimport { HashRouter, Switch, Route, Link } from 'react-router-dom'\r\nimport Highlight, { defaultProps } from 'prism-react-renderer'\r\nimport theme from 'prism-react-renderer/themes/nightOwlLight'\r\n\r\nimport './FeaturesPage.scss'\r\nimport GettingStarted from './GettingStarted/GettingStarted'\r\n\r\ninterface Props {}\r\n\r\ninterface State {\r\n  mobileOpen: boolean\r\n}\r\n\r\nclass FeaturesPage extends React.Component<Props, State> {\r\n  constructor(props: any) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      mobileOpen: false\r\n    }\r\n  }\r\n\r\n  get container() {\r\n    return window.document.body\r\n  }\r\n\r\n  handleDrawerToggle = () => {\r\n    this.setState((state) => ({\r\n      mobileOpen: !state.mobileOpen\r\n    }))\r\n  }\r\n\r\n  renderDrawer = () => {\r\n    return (\r\n      <aside className='features-page__drawer'>\r\n        <div className='drawer-logo'>react-x-carousel</div>\r\n        <nav>\r\n          <ul className='drawer-list'>\r\n            <li>\r\n              <Link to='/features/start'>Getting Started</Link>\r\n            </li>\r\n            <li>\r\n              <Link to='/features/basic'>Basic example</Link>\r\n            </li>\r\n            <li>\r\n              <Link to='/features/navigation'>Navigation</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </aside>\r\n    )\r\n  }\r\n\r\n  renderContent = () => {\r\n    return <main className='features-page__content'>{this.props.children}</main>\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='features-page'>\r\n        {this.renderDrawer()}\r\n        {this.renderContent()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FeaturesPage\r\n","import React from 'react'\r\nimport Highlight, { defaultProps } from 'prism-react-renderer'\r\nimport theme from 'prism-react-renderer/themes/nightOwlLight'\r\nimport './Highlight.scss'\r\n\r\nexport const HighlightWrapper = (props: any) => (\r\n  <div className='highlight'>\r\n    <Highlight\r\n      {...defaultProps}\r\n      theme={theme}\r\n      code={props.children}\r\n      language='jsx'\r\n    >\r\n      {({ className, style, tokens, getLineProps, getTokenProps }) => (\r\n        <pre className={className} style={style}>\r\n          {tokens.map((line, i) => (\r\n            <div {...getLineProps({ line, key: i })}>\r\n              {line.map((token, key) => (\r\n                <span {...getTokenProps({ token, key })} />\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </pre>\r\n      )}\r\n    </Highlight>\r\n  </div>\r\n)\r\n","import React from 'react'\r\nimport { Carousel, Slide } from 'react-x-carousel'\r\nimport 'react-x-carousel/dist/index.css'\r\n\r\nimport { HighlightWrapper } from '../Highlight/Hightlight'\r\nimport './GettingStarted.scss'\r\n\r\ninterface Props {}\r\n\r\ninterface State {}\r\n\r\nexport default class GettingStarted extends React.Component<Props, State> {\r\n  installCode = () => {\r\n    return `npm install --save-dev react-x-carousel`\r\n  }\r\n\r\n  importCode = () => {\r\n    return `import { Carousel, Slide } from 'react-x-carousel'\r\nimport 'react-x-carousel/dist/index.css'\r\n\r\n<Carousel>\r\n    {[1, 2, 3, 4, 5, 6, 7, 8, 9].map((item, idx) => {\r\n        return (\r\n            <Slide data={item} key={idx}>\r\n                {item}\r\n            </Slide>\r\n        )\r\n    })}\r\n</Carousel>\r\n    `\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='getting-started'>\r\n        <h1 className='feature-h1'>Getting Started</h1>\r\n\r\n        <p className='feature-p'>Install from NPM</p>\r\n\r\n        <HighlightWrapper>{this.installCode()}</HighlightWrapper>\r\n\r\n        <p className='feature-p'>Import it into your code:</p>\r\n\r\n        <HighlightWrapper>{this.importCode()}</HighlightWrapper>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Carousel, Slide } from 'react-x-carousel'\r\nimport 'react-x-carousel/dist/index.css'\r\n\r\nimport { HighlightWrapper } from '../Highlight/Hightlight'\r\nimport './BasicExample.scss'\r\n\r\nexport default class BasicExample extends React.Component {\r\n  basicJs = () => {\r\n    return `\r\n<div className='basic-example__wrapper'>\r\n  <Carousel>\r\n      {[1, 2, 3, 4, 5, 6, 7, 8, 9].map((item, idx) => {\r\n        return (\r\n          <Slide data={item} key={idx}>\r\n            {item}\r\n          </Slide>\r\n        )\r\n      })}\r\n  </Carousel>\r\n</div>\r\n    `\r\n  }\r\n\r\n  basicCss = () => {\r\n    return `\r\n.basic-example {\r\n  &__wrapper {\r\n    width: 50%;\r\n    max-width: 450px;\r\n    height: 450px;\r\n    margin: 0 auto;\r\n    \r\n    .x-carousel__slide {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      font-size: 2rem;\r\n      color: white;\r\n\r\n      &:nth-child(9n + 1) {\r\n        background: hsla(0, 100%, 50%, 0.8);\r\n      }\r\n\r\n      &:nth-child(9n + 2) {\r\n        background: hsla(40, 100%, 50%, 0.8);\r\n      }\r\n\r\n      &:nth-child(9n + 3) {\r\n        background: hsla(80, 100%, 50%, 0.8);\r\n      }\r\n\r\n      &:nth-child(9n + 4) {\r\n        background: hsla(120, 100%, 50%, 0.8);\r\n      }\r\n\r\n      &:nth-child(9n + 5) {\r\n        background: hsla(160, 100%, 50%, 0.8);\r\n      }\r\n\r\n      &:nth-child(9n + 6) {\r\n        background: hsla(200, 100%, 50%, 0.8);\r\n      }\r\n\r\n      &:nth-child(9n + 7) {\r\n        background: hsla(240, 100%, 50%, 0.8);\r\n      }\r\n\r\n      &:nth-child(9n + 8) {\r\n        background: hsla(280, 100%, 50%, 0.8);\r\n      }\r\n\r\n      &:nth-child(9n + 0) {\r\n        background: hsla(320, 100%, 50%, 0.8);\r\n      }\r\n    }\r\n\r\n    .x-scene-lcontrol,\r\n    .x-scene-rcontrol {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n}\r\n    `\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='basic-example'>\r\n        <h1 className='feature-h1'>Basic example</h1>\r\n\r\n        <p className='feature-p'>js:</p>\r\n\r\n        <HighlightWrapper>{this.basicJs()}</HighlightWrapper>\r\n\r\n        <p className='feature-p'>css:</p>\r\n\r\n        <HighlightWrapper>{this.basicCss()}</HighlightWrapper>\r\n\r\n        <div className='basic-example__wrapper'>\r\n          <Carousel>\r\n            {[1, 2, 3, 4, 5, 6, 7, 8, 9].map((item, idx) => {\r\n              return <Slide key={idx}>{item}</Slide>\r\n            })}\r\n          </Carousel>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Carousel, Slide } from 'react-x-carousel'\r\nimport 'react-x-carousel/dist/index.css'\r\n\r\nimport { HighlightWrapper } from '../Highlight/Hightlight'\r\nimport './NavigationExample.scss'\r\n\r\nexport default class NavigationExample extends React.Component {\r\n  instance: Carousel\r\n\r\n  navigationJs = () => {\r\n    return `\r\n<div className='navigation-example__wrapper'>\r\n  <Carousel onInit={(instance) => (this.instance = instance)}>\r\n      {[1, 2, 3, 4, 5, 6, 7, 8, 9].map((item, idx) => {\r\n        return (\r\n          <Slide data={item} key={idx}>\r\n            {item}\r\n          </Slide>\r\n        )\r\n      })}\r\n  </Carousel>\r\n</div>\r\n<div className='navigation-example__buttons'>\r\n  <button onClick={() => this.instance.moveLeft()}>Left</button>\r\n  <button onClick={() => this.instance.moveRight()}>Right</button>\r\n</div>\r\n    `\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='navigation-example'>\r\n        <h1 className='feature-h1'>Navigation example</h1>\r\n\r\n        <p className='feature-p'>\r\n          1) Get the instance of the carousel by using onInit callback\r\n        </p>\r\n        <p className='feature-p'>\r\n          2) Move carousel around using moveLeft and MoveRight methods\r\n        </p>\r\n\r\n        <HighlightWrapper>{this.navigationJs()}</HighlightWrapper>\r\n\r\n        <div className='navigation-example__wrapper'>\r\n          <Carousel onInit={(instance) => (this.instance = instance)}>\r\n            {[1, 2, 3, 4, 5, 6, 7, 8, 9].map((item, idx) => {\r\n              return <Slide key={idx}>{item}</Slide>\r\n            })}\r\n          </Carousel>\r\n        </div>\r\n        <div className='navigation-example__buttons'>\r\n          <button onClick={() => this.instance.moveLeft()}>Left</button>\r\n          <button onClick={() => this.instance.moveRight()}>Right</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\nimport { HashRouter, Switch, Route } from 'react-router-dom'\n\nimport MainPage from './pages/MainPage/MainPage'\nimport FeaturesPage from './pages/FeaturesPage/FeaturesPage'\n\nimport './App.scss'\nimport GettingStarted from './pages/FeaturesPage/GettingStarted/GettingStarted'\nimport BasicExample from './pages/FeaturesPage/BasicExample/BasicExample'\nimport NavigationExample from './pages/FeaturesPage/NavigationExample/NavigationExample'\n\nclass App extends React.Component {\n  render() {\n    return (\n      <HashRouter basename='/'>\n        <Switch>\n          <Route exact path='/' component={MainPage} />\n          <Route exact path='/features' component={FeaturesPage} />\n          <Route\n            exact\n            path='/features/start'\n            component={() => <FeaturesPage children={<GettingStarted />} />}\n          />\n          <Route\n            exact\n            path='/features/basic'\n            component={() => <FeaturesPage children={<BasicExample />} />}\n          />\n          <Route\n            exact\n            path='/features/navigation'\n            component={() => <FeaturesPage children={<NavigationExample />} />}\n          />\n        </Switch>\n      </HashRouter>\n    )\n  }\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}